{"version":3,"sources":["../lib/platforms.mjs"],"names":["underscore","androidVersions","android","os","platform","agent","isMobile","version","userAgent","match","name","found","find","entry","test","arch","toLowerCase","includes","ios","replace","undefined","macosVersions","macos","windows","indexOf","v","linux"],"mappings":"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","sourcesContent":["const underscore = /_/g\n\nconst androidVersions = [\n  ['Android 11', /^11.*$/],\n  ['Nougat', /^10.*$/],\n  ['Nougat', /^9.*$/],\n  ['Nougat', /^8.+$/],\n  ['Nougat', /^7.+$/],\n  ['Marshmallow', /^6.+$/],\n  ['Lollipop', /^5.+$/],\n  ['KitKat', /^4.4.*$/],\n  ['Jelly Bean', /^4.[1-3].*$/],\n  ['Ice Cream Sandwich', /^4.0.*$/],\n  ['Honeycomb', /^3.+$/],\n  ['Gingerbread', /^2.3.*$/],\n  ['FroYo', /^2.2.*/],\n  ['Eclair', /^2.[0-1].*$/],\n  ['Donut', /^1.6.*$/],\n  ['Cupcake', /^1.5.*$/],\n  ['Petit Four', /^1.1.*$/]\n]\nexport const android = {\n  os: 'android',\n  platform: /android.*|aarch64/i,\n  agent: /(?:android|adr) (\\d+([._]\\d+)*)/i,\n  isMobile: () => true,\n  version ({ userAgent = '' }) {\n    const match = userAgent.match(android.agent)\n    return match && match[1]\n  },\n  name ({ version = '' }) {\n    const found = androidVersions.find(entry => entry[1].test(version))\n    return found && found[0]\n  },\n  arch ({ platform = '', userAgent = '' }) {\n    if (platform.toLowerCase().includes('aarch64')) {\n      return 'aarch64'\n    }\n\n    const match = userAgent.match(/armv.*;/i)\n    return match && match[0]\n  }\n}\n\nexport const ios = {\n  os: 'ios',\n  platform: /(?:iphone|ipod|ipad|Pike v.*)/i,\n  agent: /os ((\\d+[._])+\\d+) like mac os x/i,\n  isMobile: () => true,\n  version ({ userAgent = '' }) {\n    const match = userAgent.match(ios.agent)\n    return match && match[1] && match[1].replace(underscore, '.')\n  },\n  name () {\n    return undefined\n  },\n  arch () {\n    return undefined\n  }\n}\n\nconst macosVersions = [\n  ['Catalina', /^10.15.*$/],\n  ['Mojave', /^10.14.*$/],\n  ['High Sierra', /^10.13.*$/],\n  ['Sierra', /^10.12.*$/],\n  ['El Capitan', /^10.11.*$/],\n  ['Yosemite', /^10.10.*$/],\n  ['Mavericks', /^10.9.*$/],\n  ['Mountain Lion', /^10.8.*$/],\n  ['Lion', /^10.7.*$/],\n  ['Snow Leopard', /^10.6.*$/],\n  ['Leopard', /^10.5.*$/],\n  ['Tiger', /^10.4.*$/],\n  ['Panther', /^10.3.*$/],\n  ['Jaguar', /^10.2.*$/],\n  ['Puma', /^10.1.*$/],\n  ['Cheetah', /^10.0.*$/]\n]\n\nexport const macos = {\n  os: 'macos',\n  platform: /mac.*/i,\n  agent: /os x ((\\d+[._])+\\d+)\\b/i,\n  isMobile: () => false,\n  arch () {\n    return undefined\n  },\n  version ({ userAgent = '' }) {\n    const match = userAgent.match(macos.agent)\n    return match && match[1] && match[1].replace(underscore, '.')\n  },\n  name ({ version }) {\n    const found = macosVersions.find(entry => entry[1].test(version))\n    return found && found[0]\n  }\n}\n\nexport const windows = {\n  os: 'windows',\n  platform: /win.*/i,\n  agent: /win(?:dows)?(?: phone)?[ _]?(?:(?:nt|9x) )?((?:(\\d+\\.)*\\d+)|xp|me|ce)\\b/i,\n  isMobile: ({ userAgent = '' }) => userAgent.toLowerCase().indexOf('windows phone') > -1,\n  arch ({ platform, userAgent }) {\n    if (platform === 'win64') {\n      return '64'\n    }\n    // useragent\n    // WOW64\n    // Win64\n  },\n  name () {\n    return undefined\n  },\n  version ({ userAgent = '' }) {\n    const match = userAgent.match(windows.agent)\n    let v\n    if (match && match[1]) {\n      switch (match[1]) {\n        case '6.4':\n        case '10.0':\n          // some versions of Firefox mistakenly used 6.4\n          v = '10.0'\n          break\n        case '6.3':\n        case '8.1':\n          v = '8.1'\n          break\n        case '6.2':\n        case '8.0':\n          v = '8'\n          break\n        case '6.1':\n        case '7.0':\n          v = '7'\n          break\n        case '6.0':\n          v = 'Vista'\n          break\n        case '5.2':\n          v = 'Server 2003'\n          break\n        case '5.1':\n          v = 'XP'\n          break\n        case '5.01':\n          v = '2000 SP1'\n          break\n        case '5.0':\n          v = '2000'\n          break\n        case '4.0':\n          v = '4.0'\n          break\n        default:\n          // nothing\n          break\n      }\n    }\n    return v\n  }\n}\n\nexport const linux = {\n  os: 'linux',\n  isMobile: ({ userAgent = '' }) => userAgent.toLowerCase().indexOf('mobi') > -1,\n  platform: /(?:linux.*)/i,\n  agent: /linux/i,\n  arch ({ platform = '' }) {\n    if (platform.indexOf('i686') > -1) {\n      return '32'\n    }\n    if (platform.indexOf('x86_64') > -1) {\n      return '64'\n    }\n  },\n  name () {\n    return undefined\n  },\n  version () {\n    return undefined\n  }\n}\n"],"file":"platforms.js"}